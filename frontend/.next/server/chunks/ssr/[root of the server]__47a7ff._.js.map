{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/components/Hanzi.tsx"],"sourcesContent":["'use client';\n\nimport { VStack, Text } from '@chakra-ui/react';\n\nfunction Hanzi(props: { hanzi: string; pinyin: string }) {\n  return (\n    <VStack\n      border=\"solid 1px #468DA4\"\n      padding=\"0.5rem\"\n      paddingTop=\"0\"\n      backgroundColor=\"#85E2FF\"\n    >\n      <Text fontSize=\"3xl\" fontWeight=\"bold\">\n        {props.hanzi}\n      </Text>\n\n      {props.pinyin ? (\n        <Text fontSize=\"l\">{props.pinyin.toLowerCase()}</Text>\n      ) : null}\n    </VStack>\n  );\n}\n\nexport default Hanzi;\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAFA;;;AAIA,SAAS,MAAM,KAAwC;IACrD,qBACE,8OAAC,8KAAA,CAAA,SAAM;QACL,QAAO;QACP,SAAQ;QACR,YAAW;QACX,iBAAgB;;0BAEhB,8OAAC,6KAAA,CAAA,OAAI;gBAAC,UAAS;gBAAM,YAAW;0BAC7B,MAAM,KAAK;;;;;;YAGb,MAAM,MAAM,iBACX,8OAAC,6KAAA,CAAA,OAAI;gBAAC,UAAS;0BAAK,MAAM,MAAM,CAAC,WAAW;;;;;uBAC1C;;;;;;;AAGV;uCAEe"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/components/Definition.tsx"],"sourcesContent":["'use client';\n\nimport {\n  Text,\n  VStack,\n  HStack,\n  Heading,\n  Divider,\n  Accordion,\n} from '@chakra-ui/react';\nimport Hanzi from './Hanzi';\nimport { ChineseDictionary } from '@/utils/types';\nimport React from 'react';\n\nfunction Definition(props: {\n  word: string;\n  pronunciations: string[];\n  definitions: string[];\n  dictionary: ChineseDictionary;\n}) {\n  let savedIndex: number;\n  let pinyin: string;\n\n  return (\n    <VStack>\n      {/* The full mandarin word */}\n      <Heading>{props.word}</Heading>\n\n      {/* The pronunciation */}\n      <Heading size=\"sm\">{props.pronunciations.join(' ')}</Heading>\n\n      {/* Each definition of the word */}\n      {props.definitions.map((definition, index) => (\n        <React.Fragment key={index}>\n          <Text textAlign=\"center\" key={index}>\n            {`${props.definitions.length > 1 ? index + 1 + '.' : ''} ${definition}`}\n          </Text>\n          {props.definitions.length - 1 > index ? <Divider /> : null}\n        </React.Fragment>\n      ))}\n\n      {props.word.split('').length !== 1 ? (\n        <VStack align=\"start\">\n          {/* The individual hanzi information */}\n          {props.word.split('').map((hanzi: string, hanziIndex) => (\n            <VStack align=\"start\" key={hanziIndex}>\n              <HStack key={hanziIndex}>\n                {\n                  (savedIndex = props.dictionary[hanzi].pinyin.indexOf(\n                    props.pronunciations[hanziIndex],\n                  ))\n                }\n                {(pinyin = props.dictionary[hanzi].pinyin[savedIndex])}\n\n                <Hanzi hanzi={hanzi} pinyin={pinyin} />\n\n                {/* The definition of the hanzi\n                Display all definitions that match the same pronunciation */}\n                <VStack key={hanziIndex} align=\"start\">\n                  {props.dictionary[hanzi].pinyin\n                    .slice(savedIndex) // only look past the point of the savedIndex\n                    .map((x, i) => ({ x, i })) // get the pinyin and its index\n                    .filter(({ x }) => x == pinyin) // filter pinyin that don't match\n                    .map(\n                      (\n                        x, // get the english definitions at those indices\n                      ) => (\n                        <Text key={x.i}>\n                          {`${x.i + 1}. ${props.dictionary[hanzi].english[x.i + savedIndex]}`}\n                        </Text>\n                      ),\n                    )}\n                </VStack>\n              </HStack>\n            </VStack>\n          ))}\n        </VStack>\n      ) : undefined}\n    </VStack>\n  );\n}\n\nexport default Definition;\n"],"names":[],"mappings":";;;;AAUA;AAEA;AAVA;AAAA;AAAA;AAAA;AAAA;AAFA;;;;;AAcA,SAAS,WAAW,KAKnB;IACC,IAAI;IACJ,IAAI;IAEJ,qBACE,8OAAC,8KAAA,CAAA,SAAM;;0BAEL,8OAAC,gLAAA,CAAA,UAAO;0BAAE,MAAM,IAAI;;;;;;0BAGpB,8OAAC,gLAAA,CAAA,UAAO;gBAAC,MAAK;0BAAM,MAAM,cAAc,CAAC,IAAI,CAAC;;;;;;YAG7C,MAAM,WAAW,CAAC,GAAG,CAAC,CAAC,YAAY,sBAClC,8OAAC,qMAAA,CAAA,UAAK,CAAC,QAAQ;;sCACb,8OAAC,6KAAA,CAAA,OAAI;4BAAC,WAAU;sCACb,GAAG,MAAM,WAAW,CAAC,MAAM,GAAG,IAAI,QAAQ,IAAI,MAAM,GAAG,CAAC,EAAE,YAAY;2BAD3C;;;;;wBAG7B,MAAM,WAAW,CAAC,MAAM,GAAG,IAAI,sBAAQ,8OAAC,6KAAA,CAAA,UAAO;;;;mCAAM;;mBAJnC;;;;;YAQtB,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,KAAK,kBAC/B,8OAAC,8KAAA,CAAA,SAAM;gBAAC,OAAM;0BAEX,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,OAAe,2BACxC,8OAAC,8KAAA,CAAA,SAAM;wBAAC,OAAM;kCACZ,cAAA,8OAAC,8KAAA,CAAA,SAAM;;gCAEF,aAAa,MAAM,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAClD,MAAM,cAAc,CAAC,WAAW;gCAGlC,SAAS,MAAM,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW;8CAErD,8OAAC,2HAAA,CAAA,UAAK;oCAAC,OAAO;oCAAO,QAAQ;;;;;;8CAI7B,8OAAC,8KAAA,CAAA,SAAM;oCAAkB,OAAM;8CAC5B,MAAM,UAAU,CAAC,MAAM,CAAC,MAAM,CAC5B,KAAK,CAAC,YAAY,6CAA6C;qCAC/D,GAAG,CAAC,CAAC,GAAG,IAAM,CAAC;4CAAE;4CAAG;wCAAE,CAAC,GAAG,+BAA+B;qCACzD,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAK,KAAK,QAAQ,iCAAiC;qCAChE,GAAG,CACF,CACE,kBAEA,8OAAC,6KAAA,CAAA,OAAI;sDACF,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,MAAM,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE;2CAD1D,EAAE,CAAC;;;;;mCATT;;;;;;2BAZF;;;;;uBADY;;;;;;;;;uBAgC7B;;;;;;;AAGV;uCAEe"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/components/Word.tsx"],"sourcesContent":["'use client';\n\nimport Hanzi from './Hanzi';\nimport Definition from './Definition';\nimport { ChineseDictionary, MandarinWordType } from '../utils/types';\nimport {\n  Flex,\n  Text,\n  Card,\n  HStack,\n  Center,\n  CardBody,\n  CardFooter,\n  Modal,\n  ModalOverlay,\n  ModalBody,\n  useDisclosure,\n  ModalContent,\n  ModalCloseButton,\n} from '@chakra-ui/react';\n\nfunction Word(props: {\n  word: MandarinWordType;\n  pronunciation: string[];\n  definitions: string[];\n  dictionary: ChineseDictionary;\n}) {\n  // TODO: Account for compound words (e.g. 軍事將領)\n  const punctuation = props.word.word === props.pronunciation[0];\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <div>\n      {!punctuation ? (\n        <Card\n          variant=\"unstyled\"\n          backgroundColor=\"#B8EEFF\"\n          margin=\"0.1rem\"\n          marginBottom=\"0.5rem\"\n          padding=\"0.2rem\"\n          border=\"1px solid #468DA4\"\n          borderRadius=\"4\"\n          boxShadow=\"1px 1px 1px rgba(0, 0, 0, 0.25)\"\n          onClick={onOpen}\n        >\n          {!punctuation ? (\n            <Modal isOpen={isOpen} onClose={onClose} isCentered>\n              <ModalOverlay />\n              <ModalContent\n                maxWidth=\"90vw\"\n                maxHeight=\"90vh\"\n                width=\"auto\"\n                height=\"auto\"\n              >\n                <ModalCloseButton />\n                <ModalBody display=\"flex\" p=\"3rem\" overflow={'scroll'}>\n                  <Definition\n                    pronunciations={props.pronunciation}\n                    word={props.word.word}\n                    definitions={props.definitions}\n                    dictionary={props.dictionary}\n                  />\n                </ModalBody>\n              </ModalContent>\n            </Modal>\n          ) : null}\n\n          <CardBody>\n            <Center>\n              <HStack spacing=\"0.1rem\">\n                {props.word.word.split('').map((char, index) => (\n                  <Hanzi\n                    hanzi={char}\n                    key={index}\n                    pinyin={props.pronunciation[index]}\n                  />\n                ))}\n              </HStack>\n            </Center>\n          </CardBody>\n\n          <Center>\n            <CardFooter>\n              <Text\n                noOfLines={2}\n                maxWidth=\"10rem\"\n                minWidth=\"5rem\"\n                fontSize=\"sm\"\n                height=\"2.6rem\"\n                marginTop=\"0.5rem\"\n                marginBottom=\"0.5rem\"\n                textAlign=\"center\"\n              >\n                {props.definitions.join('; ')}\n              </Text>\n            </CardFooter>\n          </Center>\n        </Card>\n      ) : (\n        <Flex align=\"center\" justify=\"center\" h=\"70%\" m={2}>\n          <Text fontSize=\"lg\">{props.word.word}</Text>\n        </Flex>\n      )}\n    </div>\n  );\n}\n\nexport default Word;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;;;;;AAqBA,SAAS,KAAK,KAKb;IACC,+CAA+C;IAC/C,MAAM,cAAc,MAAM,IAAI,CAAC,IAAI,KAAK,MAAM,aAAa,CAAC,EAAE;IAC9D,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,4KAAA,CAAA,gBAAa,AAAD;IAEhD,qBACE,8OAAC;kBACE,CAAC,4BACA,8OAAC,uKAAA,CAAA,OAAI;YACH,SAAQ;YACR,iBAAgB;YAChB,QAAO;YACP,cAAa;YACb,SAAQ;YACR,QAAO;YACP,cAAa;YACb,WAAU;YACV,SAAS;;gBAER,CAAC,4BACA,8OAAC,yKAAA,CAAA,QAAK;oBAAC,QAAQ;oBAAQ,SAAS;oBAAS,UAAU;;sCACjD,8OAAC,oLAAA,CAAA,eAAY;;;;;sCACb,8OAAC,oLAAA,CAAA,eAAY;4BACX,UAAS;4BACT,WAAU;4BACV,OAAM;4BACN,QAAO;;8CAEP,8OAAC,4LAAA,CAAA,mBAAgB;;;;;8CACjB,8OAAC,iLAAA,CAAA,YAAS;oCAAC,SAAQ;oCAAO,GAAE;oCAAO,UAAU;8CAC3C,cAAA,8OAAC,gIAAA,CAAA,UAAU;wCACT,gBAAgB,MAAM,aAAa;wCACnC,MAAM,MAAM,IAAI,CAAC,IAAI;wCACrB,aAAa,MAAM,WAAW;wCAC9B,YAAY,MAAM,UAAU;;;;;;;;;;;;;;;;;;;;;;2BAKlC;8BAEJ,8OAAC,+KAAA,CAAA,WAAQ;8BACP,cAAA,8OAAC,2KAAA,CAAA,SAAM;kCACL,cAAA,8OAAC,8KAAA,CAAA,SAAM;4BAAC,SAAQ;sCACb,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,MAAM,sBACpC,8OAAC,2HAAA,CAAA,UAAK;oCACJ,OAAO;oCAEP,QAAQ,MAAM,aAAa,CAAC,MAAM;mCAD7B;;;;;;;;;;;;;;;;;;;;8BAQf,8OAAC,2KAAA,CAAA,SAAM;8BACL,cAAA,8OAAC,iLAAA,CAAA,aAAU;kCACT,cAAA,8OAAC,6KAAA,CAAA,OAAI;4BACH,WAAW;4BACX,UAAS;4BACT,UAAS;4BACT,UAAS;4BACT,QAAO;4BACP,WAAU;4BACV,cAAa;4BACb,WAAU;sCAET,MAAM,WAAW,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;iCAMhC,8OAAC,uKAAA,CAAA,OAAI;YAAC,OAAM;YAAS,SAAQ;YAAS,GAAE;YAAM,GAAG;sBAC/C,cAAA,8OAAC,6KAAA,CAAA,OAAI;gBAAC,UAAS;0BAAM,MAAM,IAAI,CAAC,IAAI;;;;;;;;;;;;;;;;AAK9C;uCAEe"}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/components/MandarinSentence.tsx"],"sourcesContent":["'use client';\n\n// import { useState } from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport Word from './Word';\nimport {\n  ChineseDictionary,\n  MandarinSentenceType,\n  SegmentResponseType,\n} from '@/utils/types';\n\nfunction MandarinSentence(props: SegmentResponseType) {\n  return (\n    <Flex\n      align=\"stretch\"\n      w=\"100%\"\n      h=\"100%\"\n      px={['0', '5%']}\n      flexWrap=\"wrap\"\n      mb={['45vh', '20vh']}\n      overflow=\"hidden\"\n    >\n      {props.sentence.map((word, index) => (\n        <Word\n          word={word}\n          pronunciation={word.pinyin}\n          definitions={word.definitions}\n          dictionary={props.dictionary}\n          key={index}\n        />\n      ))}\n    </Flex>\n  );\n}\n\nexport default MandarinSentence;\n"],"names":[],"mappings":";;;;AAIA;AAFA,oCAAoC;AACpC;AAHA;;;;AAWA,SAAS,iBAAiB,KAA0B;IAClD,qBACE,8OAAC,uKAAA,CAAA,OAAI;QACH,OAAM;QACN,GAAE;QACF,GAAE;QACF,IAAI;YAAC;YAAK;SAAK;QACf,UAAS;QACT,IAAI;YAAC;YAAQ;SAAO;QACpB,UAAS;kBAER,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,sBACzB,8OAAC,0HAAA,CAAA,UAAI;gBACH,MAAM;gBACN,eAAe,KAAK,MAAM;gBAC1B,aAAa,KAAK,WAAW;gBAC7B,YAAY,MAAM,UAAU;eACvB;;;;;;;;;;AAKf;uCAEe"}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/components/Translation.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Center, Box, Text } from '@chakra-ui/react';\n\nfunction Translation(props: { text: string }) {\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  return (\n    <Box\n      className=\"translation\"\n      p={4}\n      borderWidth={1}\n      borderBottomWidth={0}\n      borderTopRadius=\"lg\"\n      borderColor=\"black\"\n      position=\"fixed\"\n      bottom={0}\n      left={['0%', '10%']}\n      right={['0%', '10%']}\n      width={['100%', '80%']}\n      height={isMinimized ? '1vh' : ['45vh', '20vh']}\n      overflowY={isMinimized ? 'hidden' : 'scroll'}\n      shadow=\"md\"\n      bg=\"white\"\n      zIndex={1}\n    >\n      <Box\n        onClick={() => setIsMinimized(!isMinimized)}\n        width=\"40%\"\n        minW=\"10rem\"\n        height=\"0.3rem\"\n        bg=\"darkgrey\"\n        borderRadius=\"md\"\n        cursor=\"pointer\"\n        position=\"fixed\"\n        left=\"50%\"\n        transform=\"translateX(-50%)\"\n      />\n\n      <Center>\n        <Text mt={3} textAlign=\"justify\" px={5}>\n          {props.text}\n        </Text>\n      </Center>\n    </Box>\n  );\n}\n\nexport default Translation;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAHA;;;;AAKA,SAAS,YAAY,KAAuB;IAC1C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,qBACE,8OAAC,qKAAA,CAAA,MAAG;QACF,WAAU;QACV,GAAG;QACH,aAAa;QACb,mBAAmB;QACnB,iBAAgB;QAChB,aAAY;QACZ,UAAS;QACT,QAAQ;QACR,MAAM;YAAC;YAAM;SAAM;QACnB,OAAO;YAAC;YAAM;SAAM;QACpB,OAAO;YAAC;YAAQ;SAAM;QACtB,QAAQ,cAAc,QAAQ;YAAC;YAAQ;SAAO;QAC9C,WAAW,cAAc,WAAW;QACpC,QAAO;QACP,IAAG;QACH,QAAQ;;0BAER,8OAAC,qKAAA,CAAA,MAAG;gBACF,SAAS,IAAM,eAAe,CAAC;gBAC/B,OAAM;gBACN,MAAK;gBACL,QAAO;gBACP,IAAG;gBACH,cAAa;gBACb,QAAO;gBACP,UAAS;gBACT,MAAK;gBACL,WAAU;;;;;;0BAGZ,8OAAC,2KAAA,CAAA,SAAM;0BACL,cAAA,8OAAC,6KAAA,CAAA,OAAI;oBAAC,IAAI;oBAAG,WAAU;oBAAU,IAAI;8BAClC,MAAM,IAAI;;;;;;;;;;;;;;;;;AAKrB;uCAEe"}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 498, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/components/ProgressBar.tsx"],"sourcesContent":["'use client';\n\nimport { Progress, Center } from '@chakra-ui/react';\n\nexport default function ProgressBar(props: { progress_percent: number }) {\n  return (\n    <Center\n      m=\"0\"\n      position=\"sticky\"\n      top=\"2.5rem\" // Dependent on TopNav height\n      left={0}\n      right={0}\n      zIndex={1}\n      width=\"100%\"\n    >\n      {props.progress_percent == 0 ? (\n        <Progress\n          w=\"100%\"\n          colorScheme=\"blue\"\n          hasStripe\n          isIndeterminate\n          overflow=\"hidden\"\n          zIndex=\"1000\"\n          size=\"xs\"\n        />\n      ) : (\n        <Progress\n          w=\"100%\"\n          colorScheme=\"blue\"\n          hasStripe\n          size=\"xs\"\n          overflow=\"hidden\"\n          zIndex=\"1000\"\n          value={props.progress_percent}\n        />\n      )}\n    </Center>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAFA;;;AAIe,SAAS,YAAY,KAAmC;IACrE,qBACE,8OAAC,2KAAA,CAAA,SAAM;QACL,GAAE;QACF,UAAS;QACT,KAAI,SAAS,6BAA6B;;QAC1C,MAAM;QACN,OAAO;QACP,QAAQ;QACR,OAAM;kBAEL,MAAM,gBAAgB,IAAI,kBACzB,8OAAC,+KAAA,CAAA,WAAQ;YACP,GAAE;YACF,aAAY;YACZ,SAAS;YACT,eAAe;YACf,UAAS;YACT,QAAO;YACP,MAAK;;;;;iCAGP,8OAAC,+KAAA,CAAA,WAAQ;YACP,GAAE;YACF,aAAY;YACZ,SAAS;YACT,MAAK;YACL,UAAS;YACT,QAAO;YACP,OAAO,MAAM,gBAAgB;;;;;;;;;;;AAKvC"}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 650, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/utils/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:8000/api'\n    : 'https://mandobot.pythonanywhere.com/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\nconst errorHandler = (error: { response: { status: any }; code: string }) => {\n  const statusCode = error.response?.status;\n\n  if (statusCode && statusCode !== 401) {\n    console.error(error);\n  }\n  return Promise.reject(error);\n};\n\napi.interceptors.response.use(undefined, (error) => {\n  return errorHandler(error);\n});\n\nexport const MandoBotAPI = {\n  segment: async function (sentence: string) {\n    const response = await api.post(`/segment?data=${sentence}`);\n    return response.data;\n  },\n  sse: function (\n    taskId: string,\n    onMessage: (data: any) => void,\n    onError?: (error: any) => void,\n  ) {\n    const eventSource = new EventSource(\n      `${API_BASE_URL}/segment?taskId=${taskId}`,\n    );\n\n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        onMessage(data);\n      } catch (e) {\n        console.error('Failed to parse SSE message', e);\n      }\n    };\n    eventSource.onerror = (error) => {\n      if (onError) onError(error);\n      else console.error('SSE Connection error:', error);\n    };\n    return eventSource;\n  },\n};\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,eACJ,uCACI;AAGN,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAEA,MAAM,eAAe,CAAC;IACpB,MAAM,aAAa,MAAM,QAAQ,EAAE;IAEnC,IAAI,cAAc,eAAe,KAAK;QACpC,QAAQ,KAAK,CAAC;IAChB;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB;AAEA,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC;IACxC,OAAO,aAAa;AACtB;AAEO,MAAM,cAAc;IACzB,SAAS,eAAgB,QAAgB;QACvC,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,CAAC,cAAc,EAAE,UAAU;QAC3D,OAAO,SAAS,IAAI;IACtB;IACA,KAAK,SACH,MAAc,EACd,SAA8B,EAC9B,OAA8B;QAE9B,MAAM,cAAc,IAAI,YACtB,GAAG,aAAa,gBAAgB,EAAE,QAAQ;QAG5C,YAAY,SAAS,GAAG,CAAC;YACvB,IAAI;gBACF,MAAM,OAAO,KAAK,KAAK,CAAC,MAAM,IAAI;gBAClC,UAAU;YACZ,EAAE,OAAO,GAAG;gBACV,QAAQ,KAAK,CAAC,+BAA+B;YAC/C;QACF;QACA,YAAY,OAAO,GAAG,CAAC;YACrB,IAAI,SAAS,QAAQ;iBAChB,QAAQ,KAAK,CAAC,yBAAyB;QAC9C;QACA,OAAO;IACT;AACF"}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Box, Input, Button, Text, HStack } from '@chakra-ui/react';\n\nimport MandarinSentence from '@/components/MandarinSentence';\nimport Translation from '@/components/Translation';\nimport ProgressBar from '@/components/ProgressBar';\n\nimport {\n  MandarinSentenceType,\n  MandarinWordType,\n  ChineseDictionary,\n  SegmentResponseType,\n} from '@/utils/types';\nimport { MandoBotAPI } from '@/utils/api';\n\nexport default function Home() {\n  const emptySentence: MandarinSentenceType = {\n    translation: '',\n    sentence: [] as MandarinWordType[],\n  };\n\n  const [sentence, setSentence] = useState(\n    emptySentence as MandarinSentenceType,\n  );\n  const [dictionary, setDictionary] = useState({} as ChineseDictionary);\n  const [percentage_done, setPercentageDone] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setLoading] = useState(false);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleMessage = (message: SegmentResponseType) => {\n    // Since the input is batched before being sent, this ensures\n    // the more recent batches do not override previous batches.\n    setSentence((previousSentence) => ({\n      translation: previousSentence.translation + ' ' + message.translation,\n      sentence: [...previousSentence.sentence, ...message.sentence],\n    }));\n    setDictionary((previousDictionary) => ({\n      ...previousDictionary,\n      ...message.dictionary,\n    }));\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setSentence(emptySentence);\n    setPercentageDone(0);\n    if (inputValue == '') {\n      return;\n    }\n    setLoading(true);\n\n    // Batch input by sentence, to speed up initial response time from server.\n    const sentencesToProcess = inputValue.split(/(?<=[。？！.?!])/);\n\n    for (const sentenceToProcess of sentencesToProcess) {\n      await MandoBotAPI.segment(sentenceToProcess).then(\n        (response: SegmentResponseType) => {\n          handleMessage(response);\n        },\n      );\n\n      setPercentageDone(\n        (prev) =>\n          prev +\n          Math.floor((sentenceToProcess.length / inputValue.length) * 100),\n      );\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Box h=\"100%\">\n      {isLoading ? <ProgressBar progress_percent={percentage_done} /> : null}\n\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Enter Mandarin text to translate and segment\"\n          value={inputValue}\n          onChange={handleInputChange}\n          mb=\"0\"\n          mt={isLoading ? '0' : '0.25rem'}\n        />\n\n        <HStack>\n          <Button type=\"submit\" colorScheme=\"teal\" m={2}>\n            Submit\n          </Button>\n\n          {isLoading ? (\n            <Text color=\"gray.600\" textAlign=\"center\" w=\"60%\">\n              {percentage_done == 0\n                ? 'Segmentation and translation can take several minutes.'\n                : 'Your analysis will load one sentence at a time.'}\n            </Text>\n          ) : null}\n        </HStack>\n      </form>\n\n      <Box h=\"100%\">\n        <MandarinSentence\n          sentence={sentence.sentence}\n          translation={sentence.translation}\n          dictionary={dictionary}\n        />\n\n        {sentence.sentence.length !== 0 ? (\n          <Translation text={sentence.translation} />\n        ) : null}\n      </Box>\n    </Box>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAGA;AACA;AACA;AAQA;AAZA;AAAA;AAAA;AAAA;AAAA;AAHA;;;;;;;;AAiBe,SAAS;IACtB,MAAM,gBAAsC;QAC1C,aAAa;QACb,UAAU,EAAE;IACd;IAEA,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EACrC;IAEF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,CAAC;IAC9C,MAAM,CAAC,iBAAiB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACtD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,WAAW,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,oBAAoB,CAAC;QACzB,cAAc,MAAM,MAAM,CAAC,KAAK;IAClC;IAEA,MAAM,gBAAgB,CAAC;QACrB,6DAA6D;QAC7D,4DAA4D;QAC5D,YAAY,CAAC,mBAAqB,CAAC;gBACjC,aAAa,iBAAiB,WAAW,GAAG,MAAM,QAAQ,WAAW;gBACrE,UAAU;uBAAI,iBAAiB,QAAQ;uBAAK,QAAQ,QAAQ;iBAAC;YAC/D,CAAC;QACD,cAAc,CAAC,qBAAuB,CAAC;gBACrC,GAAG,kBAAkB;gBACrB,GAAG,QAAQ,UAAU;YACvB,CAAC;IACH;IAEA,MAAM,eAAe,OAAO;QAC1B,MAAM,cAAc;QAEpB,YAAY;QACZ,kBAAkB;QAClB,IAAI,cAAc,IAAI;YACpB;QACF;QACA,WAAW;QAEX,0EAA0E;QAC1E,MAAM,qBAAqB,WAAW,KAAK,CAAC;QAE5C,KAAK,MAAM,qBAAqB,mBAAoB;YAClD,MAAM,mHAAA,CAAA,cAAW,CAAC,OAAO,CAAC,mBAAmB,IAAI,CAC/C,CAAC;gBACC,cAAc;YAChB;YAGF,kBACE,CAAC,OACC,OACA,KAAK,KAAK,CAAC,AAAC,kBAAkB,MAAM,GAAG,WAAW,MAAM,GAAI;QAElE;QACA,WAAW;IACb;IAEA,qBACE,8OAAC,qKAAA,CAAA,MAAG;QAAC,GAAE;;YACJ,0BAAY,8OAAC,iIAAA,CAAA,UAAW;gBAAC,kBAAkB;;;;;uBAAsB;0BAElE,8OAAC;gBAAK,UAAU;;kCACd,8OAAC,yKAAA,CAAA,QAAK;wBACJ,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU;wBACV,IAAG;wBACH,IAAI,YAAY,MAAM;;;;;;kCAGxB,8OAAC,8KAAA,CAAA,SAAM;;0CACL,8OAAC,2KAAA,CAAA,SAAM;gCAAC,MAAK;gCAAS,aAAY;gCAAO,GAAG;0CAAG;;;;;;4BAI9C,0BACC,8OAAC,6KAAA,CAAA,OAAI;gCAAC,OAAM;gCAAW,WAAU;gCAAS,GAAE;0CACzC,mBAAmB,IAChB,2DACA;;;;;uCAEJ;;;;;;;;;;;;;0BAIR,8OAAC,qKAAA,CAAA,MAAG;gBAAC,GAAE;;kCACL,8OAAC,sIAAA,CAAA,UAAgB;wBACf,UAAU,SAAS,QAAQ;wBAC3B,aAAa,SAAS,WAAW;wBACjC,YAAY;;;;;;oBAGb,SAAS,QAAQ,CAAC,MAAM,KAAK,kBAC5B,8OAAC,iIAAA,CAAA,UAAW;wBAAC,MAAM,SAAS,WAAW;;;;;+BACrC;;;;;;;;;;;;;AAIZ"}},
    {"offset": {"line": 856, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}