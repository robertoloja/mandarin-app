{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/utils/api.ts"],"sourcesContent":["import axios from \"axios\"\n\nconst API_BASE_URL = process.env.NODE_ENV === 'development' \n  ? 'http://localhost:8000/api'\n  : 'https://mandobot.pythonanywhere.com/api'\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n})\n\nconst errorHandler = (error: { response: { status: any }; code: string }) => {\n  const statusCode = error.response?.status\n\n  if (statusCode && statusCode !== 401) {\n    console.error(error)\n  }\n  return Promise.reject(error)\n}\n\napi.interceptors.response.use(undefined, (error) => {\n  return errorHandler(error)\n})\n\nexport const MandoBotAPI = {\n  segment: async function (sentence: string) {\n    const response = await api.post(`/segment?data=${sentence}`)\n    return response.data\n  },\n  sse: function (\n    taskId: string,\n    onMessage: (data: any) => void, \n    onError?: (error: any) => void\n  ) {\n    const eventSource = new EventSource(`${API_BASE_URL}/segment?taskId=${taskId}`)\n\n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data)\n        onMessage(data)\n      } catch (e) {\n        console.error('Failed to parse SSE message', e)\n      }\n    }\n    eventSource.onerror = (error) => {\n      if (onError) onError(error);\n      else console.error(\"SSE Connection error:\", error)\n    }\n    return eventSource\n  }\n}"],"names":[],"mappings":";;;AAEqB;AAFrB;;AAEA,MAAM,eAAe,uCACjB;AAGJ,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAEA,MAAM,eAAe,CAAC;IACpB,MAAM,aAAa,MAAM,QAAQ,EAAE;IAEnC,IAAI,cAAc,eAAe,KAAK;QACpC,QAAQ,KAAK,CAAC;IAChB;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB;AAEA,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC;IACxC,OAAO,aAAa;AACtB;AAEO,MAAM,cAAc;IACzB,SAAS,eAAgB,QAAgB;QACvC,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,CAAC,cAAc,EAAE,UAAU;QAC3D,OAAO,SAAS,IAAI;IACtB;IACA,KAAK,SACH,MAAc,EACd,SAA8B,EAC9B,OAA8B;QAE9B,MAAM,cAAc,IAAI,YAAY,GAAG,aAAa,gBAAgB,EAAE,QAAQ;QAE9E,YAAY,SAAS,GAAG,CAAC;YACvB,IAAI;gBACF,MAAM,OAAO,KAAK,KAAK,CAAC,MAAM,IAAI;gBAClC,UAAU;YACZ,EAAE,OAAO,GAAG;gBACV,QAAQ,KAAK,CAAC,+BAA+B;YAC/C;QACF;QACA,YAAY,OAAO,GAAG,CAAC;YACrB,IAAI,SAAS,QAAQ;iBAChB,QAAQ,KAAK,CAAC,yBAAyB;QAC9C;QACA,OAAO;IACT;AACF"}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/components/Hanzi.tsx"],"sourcesContent":["'use client'\n\nimport { VStack, Text } from '@chakra-ui/react';\n\nfunction Hanzi(props: { hanzi: string, pinyin: string }) {\n  return (\n    <VStack\n      border=\"solid 1px #468DA4\"\n      padding=\"0.5rem\"\n      paddingTop=\"0\"\n      backgroundColor=\"#85E2FF\"\n    >\n      <Text fontSize=\"3xl\" fontWeight=\"bold\">\n        {props.hanzi}\n      </Text>\n\n      {props.pinyin ?\n        <Text fontSize='l'>\n          {props.pinyin.toLowerCase()}\n        </Text>\n      : null}\n    </VStack>\n  )}\n\nexport default Hanzi;"],"names":[],"mappings":";;;;AAEA;AAAA;AAFA;;;AAIA,SAAS,MAAM,KAAwC;IACrD,qBACE,6LAAC,iLAAA,CAAA,SAAM;QACL,QAAO;QACP,SAAQ;QACR,YAAW;QACX,iBAAgB;;0BAEhB,6LAAC,gLAAA,CAAA,OAAI;gBAAC,UAAS;gBAAM,YAAW;0BAC7B,MAAM,KAAK;;;;;;YAGb,MAAM,MAAM,iBACX,6LAAC,gLAAA,CAAA,OAAI;gBAAC,UAAS;0BACZ,MAAM,MAAM,CAAC,WAAW;;;;;uBAE3B;;;;;;;AAEL;KAlBM;uCAoBM"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/components/Definition.tsx"],"sourcesContent":["'use client'\n\nimport { \n  Text, \n  VStack, \n  HStack,\n  Heading\n} from '@chakra-ui/react';\nimport Hanzi from './Hanzi';\n\nfunction Definition(props: {\n  word: string,\n  definitions: string[],\n  character_definitions: Record<string, {english: string, pinyin: string, simplified: string}>\n}) {\n  return (\n    <VStack>\n      <Heading>\n        {props.word}\n      </Heading>\n\n      {props.definitions.map((definition, index) => \n        <Text textAlign=\"center\" key={index}>\n          {definition}\n        </Text>\n      )}\n\n    {props.word.split('').length !== 1 ? \n      <VStack align=\"start\">\n        {props.word.split('').map((hanzi, index) => (\n          <HStack key={index}>\n            <Hanzi\n              hanzi={hanzi}\n              pinyin={props.character_definitions[hanzi].pinyin}\n            />\n            <Text>\n              {props.character_definitions[hanzi].english}\n            </Text>\n          </HStack>\n        ))}\n      </VStack>\n    : undefined}\n    </VStack> \n  );\n}\n\nexport default Definition;"],"names":[],"mappings":";;;;AAQA;AANA;AAAA;AAAA;AAAA;AAFA;;;;AAUA,SAAS,WAAW,KAInB;IACC,qBACE,6LAAC,iLAAA,CAAA,SAAM;;0BACL,6LAAC,mLAAA,CAAA,UAAO;0BACL,MAAM,IAAI;;;;;;YAGZ,MAAM,WAAW,CAAC,GAAG,CAAC,CAAC,YAAY,sBAClC,6LAAC,gLAAA,CAAA,OAAI;oBAAC,WAAU;8BACb;mBAD2B;;;;;YAKjC,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,KAAK,kBAC/B,6LAAC,iLAAA,CAAA,SAAM;gBAAC,OAAM;0BACX,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,sBAChC,6LAAC,iLAAA,CAAA,SAAM;;0CACL,6LAAC,8HAAA,CAAA,UAAK;gCACJ,OAAO;gCACP,QAAQ,MAAM,qBAAqB,CAAC,MAAM,CAAC,MAAM;;;;;;0CAEnD,6LAAC,gLAAA,CAAA,OAAI;0CACF,MAAM,qBAAqB,CAAC,MAAM,CAAC,OAAO;;;;;;;uBANlC;;;;;;;;;uBAWjB;;;;;;;AAGN;KAlCS;uCAoCM"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/components/Word.tsx"],"sourcesContent":["'use client'\n\nimport Hanzi from './Hanzi';\nimport Definition from './Definition'\nimport { \n  ChineseDictionary, \n  MandarinWordType \n} from '../utils/types'\nimport { \n  Flex, \n  Text, \n  Card, \n  HStack, \n  Center, \n  CardBody, \n  CardFooter,\n  Modal,\n  ModalOverlay,\n  ModalBody,\n  useDisclosure,\n  ModalContent,\n } from '@chakra-ui/react';\n\nfunction Word(props: {\n  word: MandarinWordType,\n  pronunciation: string[],\n  definitions: string[],\n  dictionary: ChineseDictionary,\n}) {\n  // TODO: Account for compound words (e.g. 軍事將領)\n  const punctuation = props.word.word === props.pronunciation[0];\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n  return (\n    <div>\n    {!punctuation ? \n      <Card\n        variant=\"unstyled\"\n        backgroundColor=\"#B8EEFF\"\n        margin=\"0.1rem\"\n        marginBottom=\"0.5rem\"\n        padding=\"0.2rem\"\n        border=\"1px solid #468DA4\"\n        borderRadius=\"4\"\n        boxShadow=\"1px 1px 1px rgba(0, 0, 0, 0.25)\"\n        onClick={onOpen}\n      >\n        {!punctuation ?\n          <Modal isOpen={isOpen} onClose={onClose} isCentered>\n            <ModalOverlay />\n            <ModalContent\n              maxWidth=\"90vw\"\n              maxHeight=\"90vh\"\n              width=\"auto\"\n              height=\"auto\"\n              onClick={onClose}\n            >\n              <ModalBody display=\"flex\" p=\"3rem\" overflow={\"scroll\"}>\n                <Definition\n                  word={props.word.word} \n                  definitions={props.definitions}\n                  character_definitions={props.dictionary}\n                /> \n              </ModalBody>\n            </ModalContent>\n          </Modal>\n          \n          : null}\n\n        <CardBody>\n          <Center>\n            <HStack spacing=\"0.1rem\">\n              {props.word.word.split('').map((char, index) =>\n                <Hanzi\n                  hanzi={char}\n                  key={index}\n                  pinyin={props.pronunciation[index]}\n                />\n              )}\n            </HStack>\n          </Center>\n        </CardBody>\n\n        <Center>\n          <CardFooter>\n            <Text\n              noOfLines={2}\n              maxWidth=\"10rem\"\n              minWidth=\"5rem\"\n              fontSize=\"sm\"\n              height=\"2.6rem\"\n              marginTop=\"0.5rem\"\n              marginBottom=\"0.5rem\"\n              textAlign=\"center\"\n            >\n              {props.definitions.join('; ')}\n            </Text>\n          </CardFooter>\n        </Center>\n      </Card>\n\n    : <Flex\n        align='center' \n        justify='center' \n        h='70%'\n        m={2}>\n        <Text fontSize=\"lg\">\n          {props.word.word}\n        </Text>\n      </Flex>}\n    </div>\n  );\n}\n\nexport default Word;"],"names":[],"mappings":";;;;AAEA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AARA;;;;AAuBA,SAAS,KAAK,KAKb;;IACC,+CAA+C;IAC/C,MAAM,cAAc,MAAM,IAAI,CAAC,IAAI,KAAK,MAAM,aAAa,CAAC,EAAE;IAC9D,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,+KAAA,CAAA,gBAAa,AAAD;IAEhD,qBACE,6LAAC;kBACA,CAAC,4BACA,6LAAC,0KAAA,CAAA,OAAI;YACH,SAAQ;YACR,iBAAgB;YAChB,QAAO;YACP,cAAa;YACb,SAAQ;YACR,QAAO;YACP,cAAa;YACb,WAAU;YACV,SAAS;;gBAER,CAAC,4BACA,6LAAC,4KAAA,CAAA,QAAK;oBAAC,QAAQ;oBAAQ,SAAS;oBAAS,UAAU;;sCACjD,6LAAC,uLAAA,CAAA,eAAY;;;;;sCACb,6LAAC,uLAAA,CAAA,eAAY;4BACX,UAAS;4BACT,WAAU;4BACV,OAAM;4BACN,QAAO;4BACP,SAAS;sCAET,cAAA,6LAAC,oLAAA,CAAA,YAAS;gCAAC,SAAQ;gCAAO,GAAE;gCAAO,UAAU;0CAC3C,cAAA,6LAAC,mIAAA,CAAA,UAAU;oCACT,MAAM,MAAM,IAAI,CAAC,IAAI;oCACrB,aAAa,MAAM,WAAW;oCAC9B,uBAAuB,MAAM,UAAU;;;;;;;;;;;;;;;;;;;;;2BAM7C;8BAEJ,6LAAC,kLAAA,CAAA,WAAQ;8BACP,cAAA,6LAAC,8KAAA,CAAA,SAAM;kCACL,cAAA,6LAAC,iLAAA,CAAA,SAAM;4BAAC,SAAQ;sCACb,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,MAAM,sBACpC,6LAAC,8HAAA,CAAA,UAAK;oCACJ,OAAO;oCAEP,QAAQ,MAAM,aAAa,CAAC,MAAM;mCAD7B;;;;;;;;;;;;;;;;;;;;8BAQf,6LAAC,8KAAA,CAAA,SAAM;8BACL,cAAA,6LAAC,oLAAA,CAAA,aAAU;kCACT,cAAA,6LAAC,gLAAA,CAAA,OAAI;4BACH,WAAW;4BACX,UAAS;4BACT,UAAS;4BACT,UAAS;4BACT,QAAO;4BACP,WAAU;4BACV,cAAa;4BACb,WAAU;sCAET,MAAM,WAAW,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;iCAMhC,6LAAC,0KAAA,CAAA,OAAI;YACH,OAAM;YACN,SAAQ;YACR,GAAE;YACF,GAAG;sBACH,cAAA,6LAAC,gLAAA,CAAA,OAAI;gBAAC,UAAS;0BACZ,MAAM,IAAI,CAAC,IAAI;;;;;;;;;;;;;;;;AAK1B;GAzFS;;QAQ6B,+KAAA,CAAA,gBAAa;;;KAR1C;uCA2FM"}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/components/MandarinSentence.tsx"],"sourcesContent":["'use client'\n\n// import { useState } from 'react';\nimport { Flex } from '@chakra-ui/react';\nimport Word from './Word';\nimport { MandarinSentenceType } from '@/utils/types';\n\n\nfunction MandarinSentence(props: MandarinSentenceType) {\n  // State to keep track of which definition tooltip is open.\n  // const [childStates, setChildStates] = useState(\n  //   props.sentence.map((word, id) => ({ id: id, isOpen: false }))\n  // );\n\n  // function toggleDefinition(id: number) {\n  //   console.log(\"clicked\")\n  //   const updatedStates = childStates.map(child => {\n  //     if (child.id === id) {\n  //       return { ...child, isOpen: !child.isOpen };\n  //     }\n  //     return { ...child, isOpen: false };\n  //   });\n  //   setChildStates(updatedStates);\n  // }\n\n  return (\n    <Flex\n      align=\"stretch\"\n      w='100%'\n      h='100%'\n      px={['0', '5%']}\n      flexWrap=\"wrap\"\n      mb={[\"45vh\", \"20vh\"]}\n      overflowX=\"hidden\"\n    >\n      {props.sentence.map((word, index) =>\n        <Word\n          word={word}\n          pronunciation={word.pinyin}\n          definitions={word.definitions}\n          dictionary={word.dictionary}\n          key={index}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default MandarinSentence;"],"names":[],"mappings":";;;;AAIA;AAFA,oCAAoC;AACpC;AAHA;;;;AAQA,SAAS,iBAAiB,KAA2B;IACnD,2DAA2D;IAC3D,kDAAkD;IAClD,kEAAkE;IAClE,KAAK;IAEL,0CAA0C;IAC1C,2BAA2B;IAC3B,qDAAqD;IACrD,6BAA6B;IAC7B,oDAAoD;IACpD,QAAQ;IACR,0CAA0C;IAC1C,QAAQ;IACR,mCAAmC;IACnC,IAAI;IAEJ,qBACE,6LAAC,0KAAA,CAAA,OAAI;QACH,OAAM;QACN,GAAE;QACF,GAAE;QACF,IAAI;YAAC;YAAK;SAAK;QACf,UAAS;QACT,IAAI;YAAC;YAAQ;SAAO;QACpB,WAAU;kBAET,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,sBACzB,6LAAC,6HAAA,CAAA,UAAI;gBACH,MAAM;gBACN,eAAe,KAAK,MAAM;gBAC1B,aAAa,KAAK,WAAW;gBAC7B,YAAY,KAAK,UAAU;eACtB;;;;;;;;;;AAKf;KAtCS;uCAwCM"}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/components/Translation.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState } from 'react';\nimport { Center, Box, Text } from '@chakra-ui/react';\n\nfunction Translation(props: { text: string }) {\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  return (\n    <Box\n      className=\"translation\"\n      p={4}\n      borderWidth={1}\n      borderBottomWidth={0}\n      borderTopRadius=\"lg\"\n      borderColor=\"black\"\n      position=\"fixed\"\n      bottom={0}\n      left={[\"0%\", \"10%\"]}\n      right={[\"0%\", \"10%\"]}\n      width={[\"100%\", \"80%\"]}\n      height={isMinimized ? \"1vh\" : [\"45vh\", \"20vh\"]}\n      overflowY={isMinimized ? \"hidden\" : \"scroll\"}\n      shadow=\"md\"\n      bg=\"white\"\n      zIndex={1}\n    >\n      <Box\n        onClick={() => setIsMinimized(!isMinimized)}\n        width=\"40%\"\n        minW=\"10rem\"\n        height=\"0.3rem\"\n        bg=\"darkgrey\"\n        borderRadius=\"md\"\n        cursor=\"pointer\"\n        position=\"fixed\"\n        left=\"50%\"\n        transform=\"translateX(-50%)\"\n      />\n\n      <Center>\n        <Text\n          mt={3}\n          textAlign=\"justify\"\n          px={5}\n        >\n        {props.text}\n        </Text>\n      </Center>\n    </Box>\n  );\n}\n\nexport default Translation;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;;;AAHA;;;AAKA,SAAS,YAAY,KAAuB;;IAC1C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,qBACE,6LAAC,wKAAA,CAAA,MAAG;QACF,WAAU;QACV,GAAG;QACH,aAAa;QACb,mBAAmB;QACnB,iBAAgB;QAChB,aAAY;QACZ,UAAS;QACT,QAAQ;QACR,MAAM;YAAC;YAAM;SAAM;QACnB,OAAO;YAAC;YAAM;SAAM;QACpB,OAAO;YAAC;YAAQ;SAAM;QACtB,QAAQ,cAAc,QAAQ;YAAC;YAAQ;SAAO;QAC9C,WAAW,cAAc,WAAW;QACpC,QAAO;QACP,IAAG;QACH,QAAQ;;0BAER,6LAAC,wKAAA,CAAA,MAAG;gBACF,SAAS,IAAM,eAAe,CAAC;gBAC/B,OAAM;gBACN,MAAK;gBACL,QAAO;gBACP,IAAG;gBACH,cAAa;gBACb,QAAO;gBACP,UAAS;gBACT,MAAK;gBACL,WAAU;;;;;;0BAGZ,6LAAC,8KAAA,CAAA,SAAM;0BACL,cAAA,6LAAC,gLAAA,CAAA,OAAI;oBACH,IAAI;oBACJ,WAAU;oBACV,IAAI;8BAEL,MAAM,IAAI;;;;;;;;;;;;;;;;;AAKnB;GA9CS;KAAA;uCAgDM"}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":["file:///Users/robertoloja/Repos/mandarin-app/frontend/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from \"react\";\nimport { \n  Box,\n  Input,\n  Button,\n  Center,\n  Text,\n  CircularProgress,\n  CircularProgressLabel,\n} from \"@chakra-ui/react\"\n\nimport { MandoBotAPI } from \"@/utils/api\";\nimport { MandarinSentenceType } from \"@/utils/types\";\nimport MandarinSentence from \"@/components/MandarinSentence\";\nimport Translation from \"@/components/Translation\";\n\n\nexport default function Home() {\n  const emptySentence: MandarinSentenceType = {\n    translation: '',\n    dictionary: {},\n    sentence: [],\n  }\n  const [isLoading, setLoading] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n  const [sentence, setSentence] = useState(emptySentence)\n  const [percentage_done, setPercentageDone] = useState(0)\n\n  let taskId = ''\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleMessage = (data: {message: MandarinSentenceType, percent: number}) => {\n    setSentence(previousSentence => ({\n      translation: previousSentence.translation + ' ' + data.message.translation,\n      dictionary: {},\n      sentence: [...previousSentence.sentence, ...data.message.sentence],\n    }))\n    setPercentageDone(data.percent)\n  }\n  const handleError = (error: any) => {\n    console.error(error)\n  }\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault()\n    setSentence(emptySentence)\n    setLoading(true)\n  \n    try {\n      await MandoBotAPI.segment(inputValue)\n        .then(response => { \n          taskId = response\n        })\n        .finally(() => {\n          console.log(\"Attempting to connect to SSE...\");\n          const eventSource = MandoBotAPI.sse(taskId, handleMessage, handleError);\n          console.log(\"SSE connection established.\");\n\n          eventSource.onerror = (error) => {\n            if (error instanceof Event && error.type === \"error\") {\n              console.log(\"Closing connection\")\n              eventSource.close()\n              setLoading(false)\n              setPercentageDone(0)\n            } else {\n              console.error(\"SSE Error:\", error)\n            }\n          }\n        })\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Box h=\"100%\">\n      <form onSubmit={handleSubmit}>\n        <Input \n          type=\"text\" \n          placeholder=\"Enter Mandarin text\" \n          value={inputValue} \n          onChange={handleInputChange} \n          mt={10}\n        />\n\n        <Button type=\"submit\" colorScheme=\"teal\" m={2}>\n          Submit\n        </Button>\n      </form>\n\n      {isLoading ? \n        <Center>\n          {percentage_done == 0 ? \n          <CircularProgress\n            isIndeterminate\n            color='green.300'\n            position=\"fixed\"\n            zIndex={1000}\n            size=\"5rem\"\n            pt=\"20rem\"\n          /> \n          :\n          <CircularProgress\n            color='green.300'\n            position=\"fixed\"\n            zIndex={1000}\n            size=\"5rem\"\n            pt=\"20rem\"\n            value={percentage_done}\n          >\n            <CircularProgressLabel\n              position=\"absolute\" \n              zIndex={1000}\n              pt=\"20rem\"\n              dropShadow=\"0px 0px 1px black\">\n              <Text fontWeight=\"bold\" color=\"white\" textShadow=\"0px 0px 1px black\">\n                {`${percentage_done}%`}\n              </Text>\n            </CircularProgressLabel>\n          </CircularProgress>\n          }\n        </Center> \n        : null}\n        <Box h=\"100%\">\n          <MandarinSentence\n            sentence={sentence.sentence}\n            translation={sentence.translation}\n            dictionary={sentence.dictionary}\n          />\n\n          {sentence.sentence.length !== 0 ? <Translation text={sentence.translation} /> : null}\n        </Box>\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 746, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}